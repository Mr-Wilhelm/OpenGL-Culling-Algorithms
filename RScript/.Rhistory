geom_point(alpha = 1.0) +
geom_smooth(method = "0.6m", confidenceInterval = FALSE) +
facet_grid(BFC ~ FVC) +
labs(title = "FPS Trends based on Back face culling and Frustum Culling combined", x =  "Average Models", y = "Average FPS") +
scale_x_continuous(labels = scientific_format(digits = 3))+
scale_y_continuous(labels = scientific_format(digits = 3))+
theme_classic()
ggplot(dataFrame,
ggplot
ggplot(dataFrame,
ggplot(dataFrame,
aes(x = avg..models, y = avg..fps, color = Env)) +
geom_point(alpha = 1.0) +
geom_smooth(method = "1m", confidenceInterval = FALSE) +
facet_grid(FVC ~ ZC) +
labs(title = "FPS Trends based on Frustum View Culling and Z Culling combined", x =  "Average Models", y = "Average FPS") +
theme_classic()
ggplot(dataFrame,
aes(x = avg..models, y = avg..fps, color = Env)) +
geom_point(alpha = 1.0) +
geom_smooth(method = "0.6m", confidenceInterval = FALSE) +
facet_grid(BFC ~ FVC) +
labs(title = "FPS Trends based on Back face culling and Frustum Culling combined", x =  "Average Models", y = "Average FPS") +
scale_x_continuous(labels = scientific_format(digits = 1))+
scale_y_continuous(labels = scientific_format(digits = 1))+
theme_classic()
ggplot(dataFrame,
aes(x = avg..models / 1000, y = avg..fps, color = Env)) +
geom_point(alpha = 1.0) +
geom_smooth(method = "0.6m", confidenceInterval = FALSE) +
facet_grid(BFC ~ FVC) +
labs(title = "FPS Trends based on Back face culling and Frustum Culling combined", x =  "Average Models", y = "Average FPS") +
scale_x_continuous(labels = scientific_format(digits = 2))+
scale_y_continuous(labels = scientific_format(digits = 2))+
theme_classic()
ggplot(dataFrame,
aes(x = avg..models / 1000, y = avg..fps, color = Env)) +
geom_point(alpha = 1.0) +
geom_smooth(method = "0.6m", confidenceInterval = FALSE) +
facet_grid(BFC ~ FVC) +
labs(title = "FPS Trends based on Back face culling and Frustum Culling combined", x =  "Average Models", y = "Average FPS") +
theme_classic()
ggplot(dataFrame,
aes(x = avg..models, y = avg..fps, color = Env)) +
geom_point(alpha = 1.0) +
geom_smooth(method = "1m", confidenceInterval = FALSE) +
facet_grid(FVC ~ ZC) +
labs(title = "FPS Trends based on Frustum View Culling and Z Culling combined", x =  "Average Models", y = "Average FPS") +
theme_classic()
ggplot(dataFrame,
aes(x = avg..models / 1000, y = avg..fps, color = Env)) +
geom_point(alpha = 1.0) +
geom_smooth(method = "0.6m", confidenceInterval = FALSE) +
facet_grid(BFC ~ FVC) +
labs(title = "FPS Trends based on Back face culling and Frustum Culling combined", x =  "Average Models (Thousands)", y = "Average FPS") +
theme_classic()
ggplot(dataFrame,
aes(x = avg..models / 1000, y = avg..fps, color = Env)) +
geom_point(alpha = 1.0) +
geom_smooth(method = NULL, confidenceInterval = FALSE) +
facet_grid(BFC ~ FVC) +
labs(title = "FPS Trends based on Back face culling and Frustum Culling combined", x =  "Average Models (Thousands)", y = "Average FPS") +
theme_classic()
ggplot(dataFrame,
aes(x = avg..models / 1000, y = avg..fps, color = Env)) +
geom_point(alpha = 1.0) +
geom_smooth(method = NULL, confidenceInterval = FALSE) +
facet_grid(FVC ~ ZC) +
labs(title = "FPS Trends based on Frustum View Culling and Z Culling combined", x =  "Average Models (Thousands)", y = "Average FPS") +
theme_classic()
ggplot(dataFrame,
aes(x = avg..models / 1000, y = avg..fps, color = Env)) +
geom_point(alpha = 1.0) +
geom_smooth(method = NULL, confidenceInterval = FALSE) +
facet_grid(BFC ~ ZC) +
labs(title = "FPS Trends based on Back face culling and Z Culling combined", x =  "Average Models (Thousands)", y = "Average FPS") +
theme_classic()
ggplot(dataFrame,
aes(x = avg..models / 1000, y = avg..fps, color = Env)) +
geom_point(alpha = 1.0) +
geom_smooth(method = NULL, confidenceInterval = FALSE) +
facet_grid(BFC ~ ZC) +
labs(title = "FPS Trends based on All Three Culling Algorithms Combined", x ="Average Models (Thousands)", y = "Average FPS") +
theme_classic()
ggplot(dataFrame,
aes(x = avg..models / 1000, y = avg..fps, color = Env)) +
geom_point(alpha = 1.0) +
geom_smooth(method = NULL, confidenceInterval = FALSE) +
facet_grid(BFC ~ FVC) +
labs(title = "FPS Trends based on Back face culling and Frustum Culling combined", x =  "Average Models (Thousands)", y = "Average FPS") +
theme_classic()
ggplot(dataFrame,
aes(x = avg..models / 1000, y = avg..fps, color = Env)) +
geom_point(alpha = 1.0) +
geom_smooth(method = NULL, confidenceInterval = FALSE) +
facet_grid(FVC ~ ZC) +
labs(title = "FPS Trends based on Frustum View Culling and Z Culling combined", x =  "Average Models (Thousands)", y = "Average FPS") +
theme_classic()
ggplot(dataFrame,
aes(x = avg..models / 1000, y = avg..fps, color = Env)) +
geom_point(alpha = 1.0) +
geom_smooth(method = NULL, confidenceInterval = FALSE) +
facet_grid(BFC ~ ZC) +
labs(title = "FPS Trends based on Back face culling and Z Culling combined", x =  "Average Models (Thousands)", y = "Average FPS") +
theme_classic()
ggplot(dataFrame,
aes(x = avg..models / 1000, y = avg..fps, color = Env)) +
geom_point(alpha = 1.0) +
geom_smooth(method = NULL, confidenceInterval = FALSE) +
facet_grid(FVC ~ ZC + BFC) +
labs(title = "FPS Trends based on All Three Culling Algorithms Combined", x ="Average Models (Thousands)", y = "Average FPS") +
theme_classic()
ggplot(dataFrame,
aes(x = avg..models / 1000, y = avg..fps, color = Env)) +
geom_point(alpha = 0.6) +
geom_smooth(method = "1m", confidenceInterval = FALSE) +
facet_grid(FVC ~ ZC + BFC) +
labs(title = "FPS Trends based on All Three Culling Algorithms Combined", x ="Average Models (Thousands)", y = "Average FPS") +
theme_classic()
ggplot(dataFrame,
aes(x = avg..models / 1000, y = avg..fps, color = Env)) +
geom_point(alpha = 0.6) +
geom_smooth(method = "1m", confidenceInterval = FALSE) +
facet_grid(FVC ~ ZC + BFC) +
labs(title = "FPS Trends based on All Three Culling Algorithms Combined", x ="Average Models (Thousands)", y = "Average FPS") +
theme_minimal()
ggplot(dataFrame,
aes(x = avg..models / 1000, y = avg..fps, color = Env)) +
geom_point(alpha = 0.6) +
geom_smooth(method = "1m", confidenceInterval = FALSE) +
facet_grid(FVC ~ ZC + BFC) +
labs(title = "FPS Trends based on All Three Culling Algorithms Combined", x ="Average Models (Thousands)", y = "Average FPS") +
theme_linedraw()
ggplot(dataFrame,
aes(x = avg..models / 1000, y = avg..fps, color = Env)) +
geom_point(alpha = 0.6) +
geom_smooth(method = "1m", confidenceInterval = FALSE) +
facet_grid(FVC ~ ZC + BFC) +
labs(title = "FPS Trends based on All Three Culling Algorithms Combined", x ="Average Models (Thousands)", y = "Average FPS") +
theme_bw()
summary(model)
ggplot(dataFrame,
aes(x = avg..polys / 1000000, y = avg..fps, color = Env)) +
geom_point(alpha = 0.6) +
geom_smooth(method = "1m", confidenceInterval = FALSE) +
facet_grid(FVC ~ ZC + BFC) +
labs(title = "FPS Trends based on All Three Culling Algorithms Combined", x ="Average Polygons (Millions)", y = "Average FPS") +
theme_bw()
source("D:/COMP302-WA278394-2204080/RScript/RDataAnalysis.R")
View(dataFrame)
View(model)
View(dataFrame)
source("D:/COMP302-WA278394-2204080/RScript/RDataAnalysis.R")
library(dplyr)
library(ggplot2)
library(scales)
env0NoCulling <- read.csv("Env_0_NoCulling_Averages.csv") %>%   #reads the csv file
mutate(Env = "DENSE", BFC = 0, FVC = 0, ZC = 0) #adds the environment and algorithm headings
env1NoCulling <- read.csv("Env_1_NoCulling_Averages.csv") %>%
mutate(Env = "SPARSE", BFC = 0, FVC = 0, ZC = 0 )
env2NoCulling <- read.csv("Env_2_NoCulling_Averages.csv") %>%
mutate(Env = "DYNAMIC", BFC = 0, FVC = 0, ZC = 0)
env0Frustum <- read.csv("Env_0_FrustumCulling_Averages.csv") %>%
mutate(Env = "DENSE", BFC = 0, FVC = 1, ZC = 0)
env1Frustum <- read.csv("Env_1_FrustumCulling_Averages.csv") %>%
mutate(Env = "SPARSE", BFC = 0, FVC = 1, ZC = 0)
env2Frustum <- read.csv("Env_2_FrustumCulling_Averages.csv") %>%
mutate(Env = "DYNAMIC", BFC = 0, FVC = 1, ZC = 0)
env0Back <- read.csv("Env_0_BackfaceCulling_Averages.csv") %>%
mutate(Env = "DENSE", BFC = 1, FVC = 0, ZC = 0)
env1Back <- read.csv("Env_1_BackfaceCulling_Averages.csv") %>%
mutate(Env = "SPARSE", BFC = 1, FVC = 0, ZC = 0)
env2Back <- read.csv("Env_2_BackfaceCulling_Averages.csv") %>%
mutate(Env = "DYNAMIC", BFC = 1, FVC = 0, ZC = 0)
env0Z <- read.csv("Env_0_ZCulling_Averages.csv") %>%
mutate(Env = "DENSE", BFC = 0, FVC = 0, ZC = 1)
env1Z <- read.csv("Env_1_ZCulling_Averages.csv") %>%
mutate(Env = "SPARSE", BFC = 0, FVC = 0, ZC = 1)
env2Z <- read.csv("Env_2_ZCulling_Averages.csv") %>%
mutate(Env = "DYNAMIC", BFC = 0, FVC = 0, ZC = 1)
env0FrustumBack <- read.csv("Env_0_BackfaceAndFrustum_Averages.csv") %>%
mutate(Env = "DENSE", BFC = 1, FVC = 1, ZC = 0)
env1FrustumBack <- read.csv("Env_1_BackfaceAndFrustum_Averages.csv") %>%
mutate(Env = "SPARSE", BFC = 1, FVC = 1, ZC = 0)
env2FrustumBack <- read.csv("Env_2_BackfaceAndFrustum_Averages.csv") %>%
mutate(Env = "DYNAMIC", BFC = 1, FVC = 1, ZC = 0)
env0FrustumZ <- read.csv("Env_0_FrustumAndZ_Averages.csv") %>%
mutate(Env = "DENSE", BFC = 0, FVC = 1, ZC = 1)
env1FrustumZ <- read.csv("Env_1_FrustumAndZ_Averages.csv") %>%
mutate(Env = "SPARSE", BFC = 0, FVC = 1, ZC = 1)
env2FrustumZ <- read.csv("Env_2_FrustumAndZ_Averages.csv") %>%
mutate(Env = "DYNAMIC", BFC = 0, FVC = 1, ZC = 1)
env0BackZ <- read.csv("Env_0_BackfaceAndZ_Averages.csv") %>%
mutate(Env = "DENSE", BFC = 1, FVC = 0, ZC = 1)
env1BackZ <- read.csv("Env_1_BackfaceAndZ_Averages.csv") %>%
mutate(Env = "SPARSE", BFC = 1, FVC = 0, ZC = 1)
env2BackZ <- read.csv("Env_2_BackfaceAndZ_Averages.csv") %>%
mutate(Env = "DYNAMIC", BFC = 1, FVC = 0, ZC = 1)
env0All <- read.csv("Env_0_AllCulling_Averages.csv") %>%
mutate(Env = "DENSE", BFC = 1, FVC = 1, ZC = 1)
env1All <- read.csv("Env_1_AllCulling_Averages.csv") %>%
mutate(Env = "SPARSE", BFC = 1, FVC = 1, ZC = 1)
env2All <- read.csv("Env_2_AllCulling_Averages.csv") %>%
mutate(Env = "DYNAMIC", BFC = 1, FVC = 1, ZC = 1)
dataFrame <- rbind(env0NoCulling, env1NoCulling, env1NoCulling,
env0Frustum, env1Frustum, env2Frustum,
env0Back, env1Back, env2Back,
env0Z, env1Z, env2Z,
env0FrustumBack, env1FrustumBack, env2FrustumBack,
env0FrustumZ, env1FrustumZ, env2FrustumZ,
env0BackZ, env1BackZ, env2BackZ,
env0All, env1All, env2All)
model <- lm(avg..fps ~ avg..polys + avg..models + Env + BFC + FVC + ZC, dataFrame)
summary(model)
ggplot(dataFrame,
aes(x = Env, y = avg..fps, fill = Env)) +
geom_boxplot() +
labs(title = "FPS Across Environments", x = "Environment", y = "Average FPS") +
theme_bw()
ggplot(dataFrame,
aes(x = Env, y = avg..fps, fill = factor(BFC))) +
geom_boxplot() +
labs(title = "FPS Based on back face culling", x = "Environment", y = "Average FPS") +
theme_bw()
ggplot(dataFrame,
aes(x = Env, y = avg..fps, fill = factor(FVC))) +
geom_boxplot() +
labs(title = "FPS Based on Frustum View Culling", x = "Environment", y = "Average FPS") +
theme_bw()
ggplot(dataFrame,
aes(x = Env, y = avg..fps, fill = factor(ZC))) +
geom_boxplot() +
labs(title = "FPS Based on z Culling culling", x = "Environment", y = "Average FPS") +
theme_bw()
ggplot(dataFrame,
aes(x = avg..models / 1000, y = avg..fps, color = Env)) +
geom_point(alpha = 0.6) +
geom_smooth(method = "1m", confidenceInterval = FALSE) +
facet_grid(FVC ~ ZC + BFC) +
labs(title = "FPS Trends based on All Three Culling Algorithms Combined", x ="Average Models (Thousands)", y = "Average FPS") +
theme_bw()
ggplot(dataFrame,
aes(x = avg..polys / 1000000, y = avg..fps, color = Env)) +
geom_point(alpha = 0.6) +
geom_smooth(method = "1m", confidenceInterval = FALSE) +
facet_grid(FVC ~ ZC + BFC) +
labs(title = "FPS Trends based on All Three Culling Algorithms Combined", x ="Average Polygons (Millions)", y = "Average FPS") +
theme_bw()
View(dataFrame)
View(dataFrame)
summary(model)
library(dplyr)
library(ggplot2)
library(scales)
ggplot(dataFrame,
aes(x = avg..polys / 1000000, y = avg..fps, color = Env)) +
geom_point(alpha = 0.6) +
geom_smooth(method = "1m", confidenceInterval = FALSE) +
facet_grid(FVC ~ ZC + BFC) +
labs(title = "FPS Trends based on All Three Culling Algorithms Combined", x ="Average Polygons (Millions)", y = "Average FPS") +
theme_bw()
ggplot(dataFrame, aes(x = avg..polys / 1000000, y = avg..fps, color = Env)) +
geom_point() + theme_bw()
View(dataFrame)
View(dataFrame)
ggplot(dataFrame, aes(x = avg..polys / 1000000, y = avg..fps, color = Env)) +
geom_point() + geom_smooth(method =lm) +  theme_bw()
View(dataFrame)
source("D:/COMP302-WA278394-2204080/RScript/RDataAnalysis.R")
Func_Hypothesis1()
Func_Hypothesis1()
Func_Hypothesis1()
source("D:/COMP302-WA278394-2204080/RScript/RDataAnalysis.R")
source("D:/COMP302-WA278394-2204080/RScript/RDataAnalysis.R")
Func_Hypothesis1()
source("D:/COMP302-WA278394-2204080/RScript/RDataAnalysis.R")
Func_Hypothesis1 <- function(){
dataFrame <- dataFrame %>% mutate(activeAlgorithms = FVC + BFC + ZC)
ggplot(dataFrame, aes(x = factor(activeAlgorithms), y = avg..fps)) +
stat_summary(fun = mean, geom = "point", size = 3) + stat_summary(fun = mean, geom = "line", group = 1) +
labs(x = "Number of active culling algorithms", y = avg..fps, title = "Framerate against number of active culling algorithms")
}
Func_Hypothesis1()
Func_Hypothesis1 <- function(){
dataFrame <- dataFrame %>% mutate(activeAlgorithms = FVC + BFC + ZC)
ggplot(dataFrame, aes(x = factor(activeAlgorithms), y = avg..fps)) +
stat_summary(fun = mean, geom = "point", size = 3) + stat_summary(fun = mean, geom = "line", group = 1) +
labs(x = "Number of active culling algorithms", y = avg..fps, title = "Framerate against number of active culling algorithms")
}
View(dataFrame)
ggplot(dataFrame, aes(x = factor(activeAlgorithms), y = avg..fps)) +
stat_summary(fun = mean, geom = "point", size = 3) + stat_summary(fun = mean, geom = "line", group = 1) +
labs(x = "Number of active culling algorithms", y = avg..fps, title = "Framerate against number of active culling algorithms")
dataFrame <- dataFrame %>% mutate(activeAlgorithms = FVC + BFC + ZC)
ggplot(dataFrame, aes(x = factor(activeAlgorithms), y = avg..fps)) +
stat_summary(fun = mean, geom = "point", size = 3) + stat_summary(fun = mean, geom = "line", group = 1) +
labs(x = "Number of active culling algorithms", y = avg..fps, title = "Framerate against number of active culling algorithms")
Func_Hypothesis1()
dataFrame <- dataFrame %>% mutate(activeAlgorithms = FVC + BFC + ZC)
ggplot(dataFrame, aes(x = factor(activeAlgorithms), y = avg..fps)) +
stat_summary(fun = mean, geom = "point", size = 3) + stat_summary(fun = mean, geom = "line", group = 1) +
labs(x = "Number of active culling algorithms", y = "average fps", title = "Framerate against number of active culling algorithms")
Func_Hypothesis1()
dataFrame <- dataFrame %>% mutate(activeAlgorithms = FVC + BFC + ZC)
ggplot(dataFrame, aes(x = factor(activeAlgorithms), y = avg..polys)) +
stat_summary(fun = mean, geom = "point", size = 3) + stat_summary(fun = mean, geom = "line", group = 1) +
labs(x = "Number of active culling algorithms", y = "average fps", title = "Framerate against number of active culling algorithms")
View(dataFrame)
Func_Hypothesis1()
dataFrame <- dataFrame %>% mutate(activeAlgorithms = FVC + BFC + ZC)
ggplot(dataFrame, aes(x = factor(activeAlgorithms), y = avg..models)) +
stat_summary(fun = mean, geom = "point", size = 3) + stat_summary(fun = mean, geom = "line", group = 1) +
labs(x = "Number of active culling algorithms", y = "average rendered models", title = "Framerate against number of active culling algorithms")
dataFrame <- dataFrame %>% mutate(activeAlgorithms = FVC + BFC + ZC)
ggplot(dataFrame, aes(x = factor(activeAlgorithms), y = avg..polys)) +
stat_summary(fun = mean, geom = "point", size = 3) + stat_summary(fun = mean, geom = "line", group = 1) +
labs(x = "Number of active culling algorithms", y = "average rendered polygons", title = "Framerate against number of active culling algorithms")
model <- lm(avg..fps ~ avg..polys + avg..models + Env + BFC + FVC + ZC, dataFrame)
summary(model)
View(model)
View(dataFrame)
dataFrame <- rbind(env0NoCulling, env1NoCulling, env1NoCulling,
env0Frustum, env1Frustum, env2Frustum,
env0Back, env1Back, env2Back,
env0Z, env1Z, env2Z,
env0FrustumBack, env1FrustumBack, env2FrustumBack,
env0FrustumZ, env1FrustumZ, env2FrustumZ,
env0BackZ, env1BackZ, env2BackZ,
env0All, env1All, env2All)
View(dataFrame)
dataFrame <- dataFrame %>% mutate(activeAlgorithms = FVC + BFC + ZC)
ggplot(dataFrame, aes(x = factor(activeAlgorithms), y = avg..polys)) +
stat_summary(fun = mean, geom = "point", size = 3) + stat_summary(fun = mean, geom = "line", group = 1) +
labs(x = "Number of active culling algorithms", y = "average rendered polygons", title = "Framerate against number of active culling algorithms")+
theme_bw()
dataFrame <- dataFrame %>% mutate(activeAlgorithms = FVC + BFC + ZC)
ggplot(dataFrame, aes(x = factor(activeAlgorithms), y = avg..polys)) +
stat_summary(fun = mean, geom = "point", size = 3) + stat_summary(fun = mean, geom = "line", group = 1) +
labs(x = "Number of active culling algorithms", y = "average rendered polygons", title = "Polygon count against number of active culling algorithms")+
theme_bw()
dataFrame <- dataFrame %>% mutate(activeAlgorithms = FVC + BFC + ZC)
ggplot(dataFrame, aes(x = factor(activeAlgorithms), y = avg..models)) +
stat_summary(fun = mean, geom = "point", size = 3) + stat_summary(fun = mean, geom = "line", group = 1) +
labs(x = "Number of active culling algorithms", y = "average rendered models", title = "Model count against number of active culling algorithms")+
theme_bw()
dataFrame <- rbind(env0NoCulling, env1NoCulling, env1NoCulling,
env0Frustum, env1Frustum, env2Frustum,
env0Back, env1Back, env2Back,
env0Z, env1Z, env2Z,
env0FrustumBack, env1FrustumBack, env2FrustumBack,
env0FrustumZ, env1FrustumZ, env2FrustumZ,
env0BackZ, env1BackZ, env2BackZ,
env0All, env1All, env2All)
library(dplyr)
library(ggplot2)
dataFrame <- rbind(env0NoCulling, env1NoCulling, env1NoCulling,
env0Frustum, env1Frustum, env2Frustum,
env0Back, env1Back, env2Back,
env0Z, env1Z, env2Z,
env0FrustumBack, env1FrustumBack, env2FrustumBack,
env0FrustumZ, env1FrustumZ, env2FrustumZ,
env0BackZ, env1BackZ, env2BackZ,
env0All, env1All, env2All)
ggplot(dataFrame, aes(x = avg..polys / 1000000, y = avg..fps, color = Env)) +
#geom_point() + geom_smooth(method =lm) +  theme_bw()
#ggplot(dataFrame,
#aes(x = avg..models / 1000, y = avg..fps, color = Env)) +
#geom_point(alpha = 0.6) +
#geom_smooth(method = "1m", confidenceInterval = FALSE) +
#facet_grid(FVC ~ ZC + BFC) +
#labs(title = "FPS Trends based on All Three Culling Algorithms Combined", x ="Average Models (Thousands)", y = "Average FPS") +
#theme_bw()
#ggplot(dataFrame,
#aes(x = avg..polys / 1000000, y = avg..fps, color = Env)) +
#geom_point(alpha = 0.6) +
#geom_smooth(method = "1m", confidenceInterval = FALSE) +
#facet_grid(FVC ~ ZC + BFC) +
#labs(title = "FPS Trends based on All Three Culling Algorithms Combined", x ="Average Polygons (Millions)", y = "Average FPS") +
#theme_bw()
Func_Hypothesis1 <- function(){
dataFrame <- dataFrame %>% mutate(activeAlgorithms = FVC + BFC + ZC)
ggplot(dataFrame, aes(x = factor(activeAlgorithms), y = avg..models)) +
stat_summary(fun = mean, geom = "point", size = 3) + stat_summary(fun = mean, geom = "line", group = 1) +
labs(x = "Number of active culling algorithms", y = "average rendered models", title = "Model count against number of active culling algorithms")+
theme_bw()
}
ggplot(dataFrame, aes(x = avg..polys / 1000000, y = avg..fps, color = Env)) +
geom_point() + geom_smooth(method =lm) +  theme_bw()
ggplot(dataFrame, aes(x = avg..models / 1000000, y = avg..fps, color = Env)) +
geom_point() + geom_smooth(method =lm) +  theme_bw()
ggplot(dataFrame, aes(x = avg..models, y = avg..fps, color = Env)) +
geom_point() + geom_smooth(method =lm) +  theme_bw()
ggplot(dataFrame, aes(x = avg..models, y = avg..fps, color = Env)) +
geom_point() + geom_smooth(method =lm) +  theme_bw()
ggplot(dataFrame, aes(x = avg..models, y = avg..fps, color = Env)) +
geom_point() + geom_smooth(method =lm) +  theme_bw()
Func_Hypothesis1 <- function(){
dataFrame <- dataFrame %>% mutate(activeAlgorithms = FVC + BFC + ZC)
ggplot(dataFrame, aes(x = factor(activeAlgorithms), y = avg..models)) +
stat_summary(fun = mean, geom = "point", size = 3) + stat_summary(fun = mean, geom = "line", group = 1) +
labs(x = "Number of active culling algorithms", y = "average rendered models", title = "Model count against number of active culling algorithms")+
theme_bw()
}
Func_Hypothesis1()
ggplot(dataFrame, aes(x = avg..models / 1000, y = avg..fps, color = Env)) +
geom_point() + geom_smooth(method =lm) +  theme_bw()
ggplot(dataFrame, aes(x = avg..polys / 1000000, y = avg..fps, color = Env)) +
geom_point() + geom_smooth(method =lm) +  theme_bw()
ggplot(dataFrame, aes(x = avg..models / 1000, y = avg..fps, color = Env)) +
geom_point() + geom_smooth(method =lm) +  theme_bw()
ggplot(dataFrame, aes(x = avg..models / 1000, y = avg..fps, color = Env)) +
geom_point() + geom_smooth(method =lm) +  theme_bw() +
labs(x = "Model Count / 1000", y = "Average FPS", title = "Polygon Count against average FPS by environment")
ggplot(dataFrame, aes(x = avg..polys / 10000000, y = avg..fps, color = Env)) +
geom_point() + geom_smooth(method =lm) +  theme_bw() +
labs(x = "Model Count / 1000", y = "Average FPS", title = "Polygon Count against average FPS by environment")
ggplot(dataFrame, aes(x = avg..polys / 10000000, y = avg..fps, color = Env)) +
geom_point() + geom_smooth(method =lm) +  theme_bw() +
labs(x = "Polygon Count ^ 8", y = "Average FPS", title = "Polygon Count against average FPS by environment")
ggplot(dataFrame, aes(x = avg..polys / 10000000, y = avg..fps, color = Env)) +
geom_point() + geom_smooth(method =lm) +  theme_bw() +
labs(x = "Polygon Count ^ 8", y = "Average FPS", title = "Polygon Count against average FPS by environment")
ggplot(dataFrame, aes(x = avg..polys / 10000000, y = avg..fps, color = Env)) +
geom_point() + geom_smooth(method =lm) +  theme_bw() +
labs(x = "Polygon Count+e8", y = "Average FPS", title = "Polygon Count against average FPS by environment")
ggplot(dataFrame, aes(x = avg..polys / 1000000, y = avg..fps, color = Env)) +
geom_point() + geom_smooth(method =lm) +  theme_bw() +
labs(x = "Polygon Count+e8", y = "Average FPS", title = "Polygon Count against average FPS by environment")
ggplot(dataFrame, aes(x = avg..polys / 1000, y = avg..fps, color = Env)) +
geom_point() + geom_smooth(method =lm) +  theme_bw() +
labs(x = "Model Count / 1000", y = "Average FPS", title = "Polygon Count against average FPS by environment")
dataFrame <- rbind(env0NoCulling, env1NoCulling, env1NoCulling,
env0Frustum, env1Frustum, env2Frustum,
env0Back, env1Back, env2Back,
env0Z, env1Z, env2Z,
env0FrustumBack, env1FrustumBack, env2FrustumBack,
env0FrustumZ, env1FrustumZ, env2FrustumZ,
env0BackZ, env1BackZ, env2BackZ,
env0All, env1All, env2All)
ggplot(dataFrame, aes(x = avg..polys / 1000, y = avg..fps, color = Env)) +
geom_point() + geom_smooth(method =lm) +  theme_bw() +
labs(x = "Model Count / 1000", y = "Average FPS", title = "Polygon Count against average FPS by environment")
ggplot(dataFrame, aes(x = avg..polys / 10000000, y = avg..fps, color = Env)) +
geom_point() + geom_smooth(method =lm) +  theme_bw() +
labs(x = "Model Count ^ 8", y = "Average FPS", title = "Polygon Count against average FPS by environment")
ggplot(dataFrame, aes(x = avg..polys, y = avg..fps, color = Env)) +
geom_point() + geom_smooth(method =lm) +  theme_bw() +
labs(x = "Polygon Count", y = "Average FPS", title = "Polygon Count against average FPS by environment")
ggplot(dataFrame,
aes(x = Env, y = avg..fps, fill = factor(BFC))) +
geom_boxplot() +
labs(title = "FPS Based on back face culling", x = "Environment", y = "Average FPS") +
theme_minimal()
ggplot(dataFrame,
aes(x = Env, y = avg..fps, fill = factor(FVC))) +
geom_boxplot() +
labs(title = "FPS Based on Frustum View Culling", x = "Environment", y = "Average FPS") +
theme_minimal()
ggplot(dataFrame,
aes(x = Env, y = avg..fps, fill = factor(ZC))) +
geom_boxplot() +
labs(title = "FPS Based on z Culling culling", x = "Environment", y = "Average FPS") +
theme_minimal()
ggplot(dataFrame, aes(x = avg..polys, y = avg..fps, color = Env)) + geom_point() + geom_smooth(method =lm) +  theme_bw() +
labs(
title = "Polygon Count against average FPS by environment",
x = "Polygon Count",
y = "Average FPS"
)
ggplot(dataFrame,
aes(x = Env, y = avg..fps, fill = factor(BFC))) + geom_boxplot() + labs(
title = "FPS Based on back face culling",
x = "Environment",
y = "Average FPS") +
theme_minimal()
ggplot(dataFrame,
aes(x = Env, y = avg..fps, fill = factor(FVC))) + geom_boxplot() + labs(
title = "FPS Based on Frustum View Culling",
x = "Environment",
y = "Average FPS") +
theme_minimal()
ggplot(dataFrame,
aes(x = Env, y = avg..fps, fill = factor(ZC))) + geom_boxplot() + labs(
title = "FPS Based on z Culling culling",
x = "Environment",
y = "Average FPS") +
theme_minimal()
Func_Hypothesis1 <- function(){
dataFrame <- dataFrame %>% mutate(activeAlgorithms = FVC + BFC + ZC)
ggplot(dataFrame, aes(x = factor(activeAlgorithms), y = avg..models)) +
stat_summary(fun = mean, geom = "point", size = 3) + stat_summary(fun = mean, geom = "line", group = 1) +
labs(x = "Number of active culling algorithms", y = "average rendered models", title = "Model count against number of active culling algorithms")+
theme_bw()
}
Func_Hypothesis1()
View(Func_Hypothesis1)
ggplot(dataFrame,
aes(x = Env, y = avg..fps, fill = factor(FVC))) + geom_boxplot() + labs(
title = "FPS Based on Frustum View Culling",
x = "Environment",
y = "Average FPS") +
theme_bw()
dataFrame <- rbind(env0NoCulling, env1NoCulling, env1NoCulling,
env0Frustum, env1Frustum, env2Frustum,
env0Back, env1Back, env2Back,
env0Z, env1Z, env2Z,
env0FrustumBack, env1FrustumBack, env2FrustumBack,
env0FrustumZ, env1FrustumZ, env2FrustumZ,
env0BackZ, env1BackZ, env2BackZ,
env0All, env1All, env2All)
model <- lm(avg..fps ~ avg..polys + avg..models + Env + BFC + FVC + ZC, dataFrame)
summary(model)
